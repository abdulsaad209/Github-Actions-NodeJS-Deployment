name: Deploying Solar System Application

env:
  MONGO_URI: ${{ secrets.MONGO_URI_SECRET }}

on:
  workflow_dispatch: 
  push:
    branches:
      - main

jobs:
  unit_testing:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      
      - name: Choose NodeJS Action
        uses: actions/setup-node@v4
        with:
          node-version: 18
      
      - name: Cache the Dependencies
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}
        
      - name: Install Dependencies 
        run: npm install

      - name: Test Code
        run: npm test

      - name: Storing Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Mocha-Test-Results
          path: test-results.xml
          retention-days: 1

  code_coverage:
    runs-on: ubuntu-latest
    needs: unit_testing
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      
      - name: Choose NodeJS Action
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Cache the Dependencies
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}
      
      - name: Installing Dependencies
        run: npm install
      
      - name: Run Code Coverage 
        run: npm run coverage

      - name: Storing Artifacts
        if: always()  #job will run if previous job fails or pass
        uses: actions/upload-artifact@v4
        continue-on-error: true
        with:
          name: Storing Code Coverage Artifacts
          path: coverage/cobertura-coverage.xml
          retention-days: 1
      
  containerization:
    runs-on: ubuntu:latest
    needs: [unit_testing, code_coverage]
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Docker Login
        uses: docker/login-action@v2.2.0
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      
        